library(quantmod)#
library(TTR)#
library(zoo)#
library(lubridate)#
library(glmnet)#
setwd("~/Dropbox/VP/Recession Models")#
#
#################################
# Clean model inputs  #
#################################
#
GetInputs <- function(){#
	#################################
		# Load raw data and convert to zoo #
	#################################
	p <- read.csv("recession_data.csv", header=T)#
	p$X <- as.Date(p$X, format = "%m/%d/%y")#
	p <- zoo(p[,-1], order.by = p$X)#
	names(p) <- tolower(gsub(".Index", "", names(p)))#
#
	#################################
		# Carry forward quarterly observations#
	#################################
	p$phffanx0 <- c(rep(NA, 2), na.locf(p$phffanx0))#
	p$gdp.cyoy <- c(rep(NA, 2), na.locf(p$gdp.cyoy))#
	p <- p[year(index(p)) >= 1978 & year(index(p)) < 2016,]#
#
	#################################
		# Consumer Expectations: #
	#################################
	p$conssent.1 <- SMA(p$conssent, 3)/Lag(SMA(p$conssent, 3), 6) - 1 # 6m change in 3mma#
	p$conssent.2 <- runMin(p$conssent/runMax(p$conssent, 12),9) # 9m min of current / annual max#
	p$conssent.3 <- runSum(0.5* sign( diff(SMA(p$lei.cexp, 2)) ) + 0.5, 8)#
#
	#################################
	# Corporate Credit#
	#################################
	p$cred.1 <- SMA(p$moodcavg, 2)/Lag(SMA(p$moodcavg, 2), 6) - 1#
	p$cred.2 <- SMA(p$moodcbaa - p$usgg10yr, 4)#
	p$cred.3 <- (p$moodcbaa - p$moodcaaa)/(Lag(p$moodcbaa,6) - Lag(p$moodcaaa, 6)) - 1    #
	p$cred.4 <- runSum(0.5* sign( diff(SMA(p$moodcavg, 2)) ) + 0.5, 8)#
#
	#################################
	# Broad Indices#
	#################################
	p$indices.1 <- p$ads.bci#
	p$indices.2 <- p$cfnai#
	p$indices.3 <- p$coi.totl / Lag(p$coi.totl, 6) - 1#
	p$indices.4 <- p$lei.lci#
	p$indices.5 <- SMA(p$oustdiff, 3)#
	p$indices.6 <- p$phffanx0#
	p$indices.7 <- p$s5finl / runMax(p$s5finl, 14)#
	p$indices.8 <- runSum(0.5* sign( diff(SMA(p$lei.yoy, 2)) ) + 0.5, 8)#
#
	#################################
	# Housing#
	#################################
	p$housing.1 <- SMA(p$lei.bp, 3) / Lag(SMA(p$lei.bp, 3), 12) - 1#
	p$housing.2 <- p$nhslnfs / Lag(p$nhslnfs, 12) - 1#
	p$housing.3 <- SMA(p$nhsltot, 3)#
	p$housing.4 <- SMA(p$nmcmfus - p$usgg10yr, 4)#
#
	#################################
	# Manufacturing#
	#################################
	p$manu.1 <- p$napmnewo / p$napminv#
	p$manu.2 <- SMA(p$napmpmi, 2)#
	p$manu.3 <- p$crb.rind / runMax(p$crb.rind, 12)#
	p$manu.4 <- SMA( p$ecrsuscp / Lag(p$ecrsuscp, 6) - 1, 4)#
	p$manu.5 <- SMA( p$ipvptrmh / Lag(p$ipvptrmh, 12) - 1, 3)#
	p$manu.6 <- runSum(0.5* sign( diff(SMA(p$lei.nwcn, 2)) ) + 0.5, 8) #
#
	#################################
	# Macro#
	#################################
	p$macro.1 <- p$uscrwtic / Lag(p$uscrwtic, 12) - 1#
	p$macro.2 <- SMA(p$dxy, 4)#
	p$macro.3 <- p$gdp.cyoy#
	p$macro.4 <- p$m1..yoy - p$cpi.yoy#
	#p$macro.5 <- runSum(0.5* sign( diff(SMA(p$lei.m2, 2)) ) + 0.5, 8)  #
#
	#################################
	# Equities#
	#################################
	p$equities.1 <- p$spx/Lag(p$spx, 6) - 1#
	p$equities.2 <- runSum(0.5* sign( diff(SMA(p$lei.stkp, 2)) ) + 0.5, 8)  # before: 6-month average of 1-month changes #
	p$equities.3 <- SMA( (p$spx/Lag(p$spx,6) - 1) / (p$usgg10yr/Lag(p$usgg10yr,6) - 1)     ,4)#
	p$equities.4 <- p$tran / runMax(p$tran, 12)#
#
	#################################
	# Employment#
	#################################
	p$emp.1 <- SMA(p$injcjc4, 2) / Lag(SMA(p$injcjc4, 2),6) - 1#
	p$emp.2 <- p$injcjc4 / Lag(p$injcjc4, 12) - 1#
	p$emp.3 <- p$injcjc4 / runMin(p$injcjc4, 12)#
	p$emp.4 <- runSum(0.5* sign( diff(SMA(p$lei.avgw, 2)) ) + 0.5, 8) # before: 6-month average of 1-month changes#
	p$emp.5 <- SMA(p$lei.wkij, 2)#
	p$emp.6 <- SMA(p$nfp.t, 3) / Lag( SMA(p$nfp.t, 3), 12) - 1#
	p$emp.7 <- 50 - p$oust.neg#
	p$emp.8 <- p$usestemp / Lag(p$usestemp, 12) - 1#
#
	#################################
	# Yield Curve#
	#################################
	p$yc.1 <- (p$dljhytw - p$usgg10yr) / runMax(p$dljhytw - p$usgg10yr, 12)#
	p$yc.2 <- runSum(0.5* sign( diff(SMA(p$lei.irte, 2)) ) + 0.5, 8) #
	p$yc.3 <- p$usgg10yr / runMax(p$usgg10yr, 12)#
	p$yc.4 <- (p$usgg10yr - p$usgg5yr) / Lag(p$usgg10yr - p$usgg5yr, 6) - 1#
	p$yc.5 <- SMA(p$usgg10yr - p$usgg5yr, 2) #
	p$yc.6 <- (p$usgg10yr - p$usgg3m) / Lag(p$usgg10yr - p$usgg3m, 6) - 1#
	p$yc.7 <- SMA(p$usgg10yr - p$usgg3m, 2) #
#
	#################################
	# Clean model inputs - discard missing vars. #
	#################################
	vars <- names(p)[c(1, 46:ncol(p))]#
	p <- as.data.frame(p[, vars])#
	omit <- c()#
	for(i in 1:ncol(p)){#
		if( length(which(is.na(p[,i]))) > 50){#
			omit <- c(omit, i)#
		}#
	}#
	names(p)[omit]#
	p <- p[, -omit]#
	p <- p[complete.cases(p),]#
#
	return(p)#
#
}
CalcLasso <- function(p, plot = F, return.cvobj = F){#
#
	res <- NULL#
	x <- model.matrix(usrindex ~ . , data = p)[,-1]#
	y <- p$usrindex#
	cv.glmod <- cv.glmnet(x, y, alpha = 1, family = "binomial", type.measure = "class")#
	fit.glmod <- glmnet(x, y, alpha = 1, family = "binomial")#
	if(plot){#
		pdf("gvmod.pdf")#
		plot(cv.glmod)#
		dev.off()#
	}#
	res$lambda <- cv.glmod$lambda.min#
	res$coefs <- coef(cv.glmod, s = "lambda.min")#
	# Get Lasso predictions#
	pred <- as.data.frame( predict(cv.glmod, newx = x, s = "lambda.min", type = "response") )#
	names(pred) <- c("fitted.value")#
	pred$dts <- as.Date(rownames(pred), format = "%Y-%m-%d")#
	pred <- zoo(pred$fitted.value, pred$dts)#
	index(pred) <- index(pred) + months(1) - 1#
	res$pred <- pred#
	if(! return.cvobj){#
		return(res)#
	}#
	if(return.cvobj){#
		return(cv.glmod)#
	}#
#
}
piger <- read.csv("piger.csv", header=T)#
	piger <- zoo(piger$piger/100, as.Date(piger$dts, format = "%Y-%m-%d"))#
	index(piger) <- index(piger) + months(1) - 1#
	vpr <- read.csv("vpSignal.csv", header=T)#
	vpr <- vpr[complete.cases(vpr),]#
	vpr <- zoo(vpr$vpRec/13, as.Date(vpr$dts, format = "%m/%d/%y"))#
	usr <- zoo(p$usrindex, as.Date(rownames(p), "%Y-%m-%d"))#
	index(usr) <- index(usr) + months(1) - 1#
	df.comp <- merge(piger, vpr, usr)#
	df.comp <- merge(df.comp, CalcLasso(p)$pred)#
	names(df.comp) <- c("piger", "vpr", "usr", "lasso")
p <- GetInputs()
piger <- read.csv("piger.csv", header=T)#
	piger <- zoo(piger$piger/100, as.Date(piger$dts, format = "%Y-%m-%d"))#
	index(piger) <- index(piger) + months(1) - 1#
	vpr <- read.csv("vpSignal.csv", header=T)#
	vpr <- vpr[complete.cases(vpr),]#
	vpr <- zoo(vpr$vpRec/13, as.Date(vpr$dts, format = "%m/%d/%y"))#
	usr <- zoo(p$usrindex, as.Date(rownames(p), "%Y-%m-%d"))#
	index(usr) <- index(usr) + months(1) - 1#
	df.comp <- merge(piger, vpr, usr)#
	df.comp <- merge(df.comp, CalcLasso(p)$pred)#
	names(df.comp) <- c("piger", "vpr", "usr", "lasso")
df.comp
res <- c()#
	for(i in 2:ncol(p)){#
		res[(i-1)] <-  (cor(p[,i], p$usrindex, use = "complete.obs"))#
	}#
	names(res) <- names(p)[2:ncol(p)]#
	naive <- p[, c("usrindex", names(sort(abs(res)))[(41 - 4):41])]#
	# Generate naive predictions from logit w/ these inputs and merge with other predictions#
	f <- glm(usrindex ~ . , data = naive, family = "binomial"(link="logit"))#
	print(paste("Naive logit explains", 100*round(1 - f$deviance / f$null.deviance, 3), "% of variation"))#
	naive.pred <- predict(f, newx = naive[,-1], type = "response")#
	naive.pred <- zoo(naive.pred, as.Date(names(naive.pred), "%Y-%m-%d"))#
	index(naive.pred) <- index(naive.pred) + months(1) - 1#
	df.comp <- merge(df.comp, naive.pred)#
	df.comp <- df.comp[complete.cases(df.comp), ]
head(df.comp)
par(mfrow = c(3, 1), oma = c(1,1,1,1) + 0.1,  mar = c(2,1,1,1) + 0.3)
plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Piger Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$piger, col = "orange", lwd = 3)#
#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Naive Logit Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$naive.pred, col = "darkgreen", lwd = 3)#
#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "LASSO Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$lasso, col = "blue", lwd = 3)
x = 0
plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Piger Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$piger, col = "orange", lwd = 3)
head(df.comp)
x=c(0, 1)#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "VP Recession Diffusion Index")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$vpr, col = "red", lwd = 3)
dev.off()
head(df.comp)
names(df.comp)
plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Piger Recession Probabilities")
summary(df.comp$piger)
plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Piger Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$piger, col = "orange", lwd = 3)
par(mfrow = c(3, 1), oma = c(1,1,1,1) + 0.1,  mar = c(2,1,1,1) + 0.3)
plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Piger Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$piger, col = "orange", lwd = 3)#
#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Naive Logit Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$naive.pred, col = "darkgreen", lwd = 3)#
#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "LASSO Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$lasso, col = "blue", lwd = 3)
dev.off()
pdf("recession_comparison3.pdf")
par(mfrow = c(3, 1), oma = c(1,1,1,1) + 0.1,  mar = c(2,1,1,1) + 0.3)
plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Piger Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$piger, col = "orange", lwd = 3)#
#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "Naive Logit Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$naive.pred, col = "darkgreen", lwd = 3)#
#
	plot(index(df.comp), df.comp$lasso, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n", main = "LASSO Recession Probabilities")#
	rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1, #
		as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1, #
		as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1, #
		as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
		rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1, #
		as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
	lines(index(df.comp), df.comp$lasso, col = "blue", lwd = 3)
dev.off()
head(p)
dim(p)
head(p)
setwd("~/jweinreb.github.io/assets")
p <- read.csv("recTransformed.csv", header=T)#
p$X <- as.Date(p$X, format = "%m/%d/%y")#
p <- zoo(p[,-1], order.by = p$X)#
names(p) <- tolower(gsub(".Index", "", names(p)))
head(p)
CalcLasso <- function(p, plot = F, return.cvobj = T){#
#
	#########
	# Arguments:#
	#   p = input data generated from GetInputs()#
	#   plot = if T, output plot of lambda vs misclassification error#
	#  return.cvobj = if T return base cv.glmnet object; o.w. return res#
	# Returns: one of:#
	#   cvobj = cv.glmnet object#
	#   res = list() containing model lambda, coefficients, and fitted values#
	#########
#
	res <- NULL#
	x <- model.matrix(usrindex ~ . , data = p)[,-1]#
	y <- p$usrindex#
	cv.glmod <- cv.glmnet(x, y, alpha = 1, family = "binomial", type.measure = "class")#
	fit.glmod <- glmnet(x, y, alpha = 1, family = "binomial")#
#
	if(plot){#
		pdf("gvmod.pdf")#
		plot(cv.glmod)#
		dev.off()#
	}#
#
	res$lambda <- cv.glmod$lambda.min#
	res$coefs <- coef(cv.glmod, s = "lambda.min")#
#
	# Get Lasso predictions#
	pred <- as.data.frame( predict(cv.glmod, newx = x, s = "lambda.min", type = "response") )#
	names(pred) <- c("fitted.value")#
	pred$dts <- as.Date(rownames(pred), format = "%Y-%m-%d")#
	pred <- zoo(pred$fitted.value, pred$dts)#
	index(pred) <- index(pred) + months(1) - 1#
	res$pred <- pred#
#
	if(! return.cvobj){#
		return(res)#
	}#
#
	if(return.cvobj){#
		return(cv.glmod)#
	}#
#
}
p <- GetInputs()#
#
# Training set from 1980 to 2005#
p.train <- p[1:300, ]#
#
# Test set from 2005 to Dec 2015#
p.test <- p[301:nrow(p), ]
head(p)
p <- read.csv("recTransformed.csv", header=T)#
p$X <- as.Date(p$X, format = "%m/%d/%y")#
p <- zoo(p[,-1], order.by = p$X)#
names(p) <- tolower(gsub(".Index", "", names(p)))
head(p)
# Training set from 1980 to 2005#
p.train <- p[1:300, ]#
#
# Test set from 2005 to Dec 2015#
p.test <- p[301:nrow(p), ]
head(p.train)
cv.glmod <- CalcLasso(p.train, plot = F, return.cvobj = T)
cv.glmod
x.in<- model.matrix(usrindex ~ . , data = p.train)[,-1]#
pred.in <- predict(cv.glmod, newx = x.in, s = "lambda.min", type = "response")#
pred.in <- zoo(pred.in[,1], as.Date(rownames(pred.in), "%Y-%m-%d") )
# Fit the model on the test set; generate out-of-sample predictions#
x.out <- model.matrix(usrindex ~ . , data = p.test)[,-1]#
pred.out <- predict(cv.glmod, newx = x.out, s = "lambda.min", type = "response")#
pred.out <- zoo(pred.out[,1], as.Date(rownames(pred.out), "%Y-%m-%d") )
x <- pred.in#
plot(x, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n",#
    main = "", xlim = c(min(index(pred.in)), max(index(pred.out))))#
  rect(as.Date("1980-01-01"), min(x, na.rm=T)-0.1,#
    as.Date("1980-07-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
  rect(as.Date("1981-07-01"), min(x, na.rm=T)-0.1,#
    as.Date("1982-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
  rect(as.Date("1990-07-01"), min(x, na.rm=T)-0.1,#
    as.Date("1991-03-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
  rect(as.Date("2001-03-01"), min(x, na.rm=T)-0.1,#
    as.Date("2001-11-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
  rect(as.Date("2007-12-01"), min(x, na.rm=T)-0.1,#
    as.Date("2009-06-01"), max(x, na.rm=T) + 0.1, col = "lightgrey")#
#
  lines(pred.in, col = "blue", type ="l", lwd = 3)#
  lines(pred.out, col = "red", type ="l", lwd = 3)
usr <- zoo(p$usrindex, as.Date(rownames(p), "%Y-%m-%d"))#
df <- merge(pred.out, usr)#
df <- df[complete.cases(df), ]#
df[df$pred.out < 0.5 & df$usr == 1 | df$pred.out > 0.5 & df$usr == 0, ]
head(p)
rownames(p)
index(p)
usr <- zoo(p$usrindex)
head(usr)
df <- merge(pred.out, usr)#
df <- df[complete.cases(df), ]
head(df)
df[df$pred.out < 0.5 & df$usr == 1 | df$pred.out > 0.5 & df$usr == 0, ]
dtMin <- as.Date("2007-10-01", format = "%Y-%m-%d")#
dtMax <- as.Date("2009-12-01", format = "%Y-%m-%d")#
seq <- seq(dtMin, dtMax, "month")[seq(1, 27, 3)]#
lab <- c("2007Q4", "2008Q1", "2008Q2", "2008Q3", "2008Q4", "2009Q1", "2009Q2", "2009Q3", "2009Q4")#
plot(df$pred.out, xlab = "", ylab = "", col = "blue", lwd = 3, type = "n",#
      xlim = c(dtMin, dtMax), xaxt = "n")#
      axis(1, at = seq, lab = lab )#
rect(as.Date("2007-12-01"), min(df$pred.out, na.rm=T)-0.1,#
    as.Date("2009-06-01"), max(df$pred.out, na.rm=T) + 0.1, col = "lightgrey")#
abline(h  = 0.5, lty = 2)#
idx <- which( (df$pred.out < 0.5 & df$usr == 1) | (df$pred.out > 0.5 & df$usr == 0) )#
points(df$pre[-idx], col = "darkgreen", lwd = 3, pch = 19)#
points(df$pred[idx], col = "red", pch = 19)
